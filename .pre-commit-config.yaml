# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v5.0.0"
    hooks:
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-toml
      - id: destroyed-symlinks
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: no-commit-to-branch
        args: [--branch, main]
      - id: trailing-whitespace

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: "v1.15.0"
    hooks:
      - id: mypy
        language_version: "3.9"
        # TODO: find out how to amend mypy, pyright, pre-commit and package requirements.
        # Apparently, there is no easy way to avoid some level of duplication of
        # information when the package is *not* installed, which is the case of tmt
        # & pre-commit in our setup.
        #
        # For now, we simply copy & paste from pyproject.toml :(
        additional_dependencies:
          - "click>=8.0.3"
          - "docutils>=0.16"
          - "fmf>=1.7.0"
          - "jinja2>=2.11.3"
          - "packaging>=20"
          - "pint>=0.16.1"
          - "pydantic>=1.10.14"
          - "pygments>=2.7.4"
          - "requests>=2.25.1"
          - "ruamel.yaml>=0.16.6"
          - "urllib3>=1.26.5, <3.0"
          - "jira>=3.5.0, <4"

          # report-junit
          - "lxml>=4.6.5"

          - "typing-extensions>=4.12.2; python_version < '3.13'"
          - "pytest"
          - "requre"
          # Do not install *types-click* - it's not recommended with Click 8 & newer,
          # which is the version a developer encounters given the requirements are not
          # frozen.
          - "types-Markdown"
          # prevent conflict between types-requests and urllib3
          - "types-requests<2.31.0.7; python_version < '3.10'"
          - "types-requests; python_version >= '3.10'"
          - "types-setuptools"
          - "types-jsonschema"
          - "types-urllib3"
          - "types-jinja2"
          - "types-babel"
          - "types-docutils"
          - "types-lxml"

        pass_filenames: false

  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.399
    hooks:
      - id: pyright
        language_version: "3.9"
        # TODO: find out how to amend mypy, pyright, pre-commit and package requirements.
        # Apparently, there is no easy way to avoid some level of duplication of
        # information when the package is *not* installed, which is the case of tmt
        # & pre-commit in our setup.
        #
        # For now, we simply copy & paste from pyproject.toml :(
        additional_dependencies:
          - "click>=8.0.3"
          - "docutils>=0.16"
          - "fmf>=1.7.0"
          - "jinja2>=2.11.3"
          - "packaging>=20"
          - "pint>=0.16.1"
          - "pydantic>=1.10.14"
          - "pygments>=2.7.4"
          - "requests>=2.25.1"
          - "ruamel.yaml>=0.16.6"
          - "urllib3>=1.26.5, <3.0"
          - "jira>=3.5.0, <4"

          # report-junit
          - "lxml>=4.6.5"

          - "typing-extensions>=4.9.0; python_version < '3.13'"
          - "pytest"
          - "requre"
          # Do not install *types-click* - it's not recommended with Click 8 & newer,
          # which is the version a developer encounters given the requirements are not
          # frozen.
          - "types-Markdown"
          # prevent conflict between types-requests and urllib3
          - "types-requests<2.31.0.7; python_version < '3.10'"
          - "types-requests; python_version >= '3.10'"
          - "types-setuptools"
          - "types-jsonschema"
          - "types-urllib3"
          - "types-jinja2"
          - "types-babel"
          - "types-docutils"
          - "types-lxml"

  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: "0.33.0"
    hooks:
      - id: check-metaschema
        name: "Check JSON schemas validity"
        files: ^tmt/schemas/.*\.yaml

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.0
    hooks:
      - id: yamllint
        files: ^tmt/(?:schemas|steps/prepare/feature)/.*\.yaml

  - repo: https://github.com/ansible-community/ansible-lint.git
    rev: v25.2.1
    hooks:
      - id: ansible-lint
        args:
          - ansible/
          - examples/ansible/
          - examples/redis/ansible/
          - tests/finish/ansible/data/
          - tests/run/worktree/data/ansible/
          - tmt/steps/prepare/feature/
          - --profile=production
          - --exclude=examples/redis/ansible/tasks/redis.yml
          # redis.yml example requires posix module to be installed
          # in order to be parsed by ansible-lint

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.11.5
    hooks:
      - id: ruff
        args:
          - '--fix'
          - '--show-fixes'
      - id: ruff-format

  - repo: https://github.com/teemtee/tmt.git
    rev: 1.46.0
    hooks:
    - id: tmt-lint
      additional_dependencies:
        - "docutils>=0.16"         # 0.16 is the current one available for RHEL9
        - "packaging>=20"          # 20 seems to be available with RHEL8
        - "pint<0.20"
        - "pydantic>=1.10.14"
        - "pygments>=2.7.4"        # 2.7.4 is the current one available for RHEL9
        # Help installation by reducing the set of inspected botocore release.
        # There is *a lot* of them, and hatch might fetch many of them.
        - "botocore>=1.25.10"      # 1.25.10 is the current one available for RHEL9
        - "typing-extensions>=4.9.0; python_version < '3.13'"
        - "fmf>=1.6.0"
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        additional_dependencies:
          - tomli  # Required for python < 3.11

  - repo: https://github.com/djlint/djLint
    rev: v1.36.4
    hooks:
      - id: djlint
        files: "\\.j2"
        types_or: ['jinja']

  - repo: https://github.com/aristanetworks/j2lint.git
    rev: v1.2.0
    hooks:
      - id: j2lint
        args:
          # j2lint does not consume pyproject.toml
          - "--ignore"
          - jinja-statements-indentation
          - jinja-variable-lower-case
          - single-statement-per-line
          - "--"

  - repo: https://github.com/AleksaC/hadolint-py
    rev: v2.12.1b3
    hooks:

      - id: hadolint
        files: ^containers/.*

  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        # Local shellcheck for developers - keep exclusions in sync with .github/workflows/shellcheck.yml
        exclude: |
          (?x)^(
            tests/.*|
            examples/.*|
            tmt/steps/execute/scripts/.*\.sh\.j2|
            tmt/templates/.*
          )$
