specfile_path: tmt.spec
files_to_sync:
  - tmt.spec
  - .packit.yaml

upstream_package_name: tmt
downstream_package_name: tmt

upstream_project_url: https://github.com/teemtee/tmt
issue_repository: https://github.com/teemtee/tmt

srpm_build_deps:
  - hatch
  - python3-hatch-vcs

actions: &base-actions
  create-archive:
    - hatch run docs:man
    - hatch build -t sdist
    - bash -c "ls dist/tmt-*.tar.gz"

targets: &all-targets
  - fedora-all
  - epel-9

# Uncomment below line if OpenScanHub scans are failing
# osh_diff_scan_after_copr_build: false

_:
  - &copr_on_packit
    job: copr_build
  - &copr_on_tmt
    <<: *copr_on_packit
    list_on_homepage: True
    preserve_project: True
    owner: "@teemtee"
    project: tmt
  - &test_base
    job: tests
    trigger: pull_request
  - &latest-targets
    - fedora-latest-stable
    - epel-9
  - &internal
    use_internal_tf: True
    targets:
      - fedora-latest-stable
    tf_extra_params:
      environments:
        - &tmt-cloud-resources
          settings:
            provisioning:
              tags:
                BusinessUnit: tmt
  - &require-full-tests
    require:
      label:
        present:
          - ci | full test
        absent:
          - status | discuss


jobs:
  # Release to copr
  - <<: *copr_on_tmt
    trigger: release
    actions:
      <<: *base-actions
      get-current-version:
        - hatch version

  # Build commits to main
  - <<: *copr_on_tmt
    trigger: commit
    branch: main
    release_suffix: "{PACKIT_PROJECT_BRANCH}"
    actions:
      <<: *base-actions
      get-current-version:
        # Get rid of the the final version digit to make copr
        # builds older than the final release
        - bash -c "hatch version | sed -E 's/\\.[0-9]+\\.dev/.dev/'"

  # Build pull requests
  - <<: *copr_on_packit
    trigger: pull_request
    actions:
      <<: *base-actions
      get-current-version:
        # Use `dev888` instead of the last version digit to make
        # builds older than the final release and newer than
        # copr builds from main. Remove the remaining suffix
        # generated by `hatch version` as well so that build
        # with the latest timestamp always wins.
        - bash -c "hatch version | sed -E 's/\\.[0-9]+\\.dev.*/.dev888/'"

  # Test core
  - <<: *test_base
    targets: *latest-targets
    identifier: core
    tmt_plan: '/plans/features/(core|basic)'

  # Test full
  # Do not run extended unit tests, that plan gets its own job because
  # of podman vs systemd-resolved flakiness.
  - <<: *test_base
    <<: *require-full-tests
    identifier: full
    tmt_plan: '^(?!/plans/features/extended-unit-tests).*$'

  # Extended unit tests
  - <<: *test_base
    <<: *require-full-tests
    targets: [ fedora-latest-stable ]
    identifier: extended-unit-tests
    tmt_plan: '/plans/features/extended-unit-tests$'

  # Test virtual provision
  - <<: *test_base
    <<: *internal
    <<: *require-full-tests
    identifier: provision
    tmt_plan: '/plans/provision/(bootc|virtual)'
    tf_extra_params:
      environments:
        - tmt:
            context:
              how: provision
        - *tmt-cloud-resources

  # Test internal plugins
  - <<: *test_base
    <<: *internal
    <<: *require-full-tests
    identifier: internal-plugins
    fmf_url: "https://gitlab.cee.redhat.com/baseos-qe/tmt.git"

  # Test internal wow
  - <<: *test_base
    <<: *internal
    <<: *require-full-tests
    identifier: internal-wow
    fmf_url: "https://gitlab.cee.redhat.com/baseos-qe/integration_scripts.git"
    tmt_plan: '/tmt/integration/plan'

  # Fedora releases
  - job: propose_downstream
    trigger: release
    dist_git_branches: *all-targets

  - job: koji_build
    trigger: commit
    allowed_pr_authors: [ "packit", "psss", "lzachar" ]
    allowed_committers: [ "packit", "psss", "lzachar" ]
    dist_git_branches: *all-targets

  - job: bodhi_update
    trigger: commit
    dist_git_branches:
      - fedora-branched
      - epel-9
