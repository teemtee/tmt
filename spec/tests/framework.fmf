summary: Test framework defining how tests should be executed

story:
    As a tester I want to include tests using different test
    execution framework in a single plan.

description: |
    The framework defines how test code should be executed and how
    test results should be interpreted (e.g. checking exit code of
    a shell test versus checking beakerlib test results file). It
    also determines possible additional required packages to be
    installed on the test environment.

    Currently ``shell`` and ``beakerlib`` are supported. Each
    `execute` step plugin must list which frameworks it supports
    and raise an error when an unsupported framework is detected.

    Must be a ``string``, by default ``shell`` is used.

    shell
        Only the exit code determines the test result. Exit code
        ``0`` is handled as a test ``pass``, exit code ``1`` is
        considered to be a test ``fail`` and any other exit code
        is interpreted as an ``error``.

    beakerlib
        Exit code and BeakerLib's ``TestResults`` file determine
        the test result.

example:
  - |
    # Test written in shell
    framework: shell
  - |
    # A beakerlib test
    framework: beakerlib

link:
  - implemented-by: /tmt/base.py
  - verified-by: /tests/execute/framework
