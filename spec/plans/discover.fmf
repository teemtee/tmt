summary: Discover tests relevant for execution

description: |
    Gather information about tests which are supposed to be run.
    Provide method ``tests()`` returning a list of discovered
    tests and ``requires()`` returning a list of all required
    packages aggregated from the `require`_ attribute of the
    individual test metadata.

    .. _require: https://tmt.readthedocs.io/en/latest/spec/tests.html#require

    Store the list of aggregated tests with their corresponding
    metadata in the ``tests.yaml`` file. The format should be a
    dictionary of dictionaries structured in the following way::

        /test/one:
            summary: Short test summary.
            description: Long test description.
            contact: Petr Šplíchal <psplicha@redhat.com>
            component: [tmt]
            test: tmt --help
            path: /test/path/
            require: [package1, package2]
            environment:
                key1: value1
                key2: value2
                key3: value3
            duration: 5m
            enabled: true
            result: respect
            tag: [tag]
            tier: 1

        /test/two:
            summary: Short test summary.
            description: Long test description.
            ...

/shell:
    summary: Provide a manual list of shell test cases
    description:
        List of test cases to be executed can be defined manually
        directly in the plan as a list of dictionaries containing
        test ``name`` and actual ``test`` script. Optionally it is
        possible to define any other :ref:`/spec/tests` attributes
        such as ``path`` or ``duration`` here as well. The default
        :ref:`/spec/tests/duration` for tests defined directly in
        the discover step is ``1h``.
    example: |
        discover:
            how: shell
            tests:
            - name: /help/main
              test: tmt --help
            - name: /help/test
              test: tmt test --help
            - name: /help/smoke
              test: ./smoke.sh
              path: /tests/shell
              duration: 1m
    link:
      - implemented-by: /tmt/steps/discover/shell.py

/fmf:
    summary: Discover available tests using the fmf format
    description: |
        Use the `Flexible Metadata Format`_ to explore all
        available tests in given repository. The following
        parameters are supported:

        url
            Git repository containing the metadata tree.
            Current git repository used by default.
        ref
            Branch, tag or commit specifying the desired git
            revision. Defaults to the ``master`` branch if url
            given or to the current ``HEAD`` if url not provided.
        path
            Path to the metadata tree root. Should be relative to
            the git repository root if url provided, absolute
            local filesystem path otherwise. By default ``.`` is
            used.
        test
            List of test names or regular expressions used to
            select tests by name.
        filter
            Apply advanced filter based on test metadata
            attributes. See ``pydoc fmf.filter`` for more info.

        See also the `fmf identifier`_ documentation.

        It is also possible to limit tests only to those that have
        changed in git since a given revision. This can be
        particularly useful when testing changes to tests
        themselves (e.g. in a pull request CI).

        Related config options (all optional):

        modified-only
            Set to True if you want to filter modified tests only.
            The test is modified if its name starts with the name
            of any directory modified since modified-ref.
        modified-url
            Will be fetched as a "reference" remote in the test
            dir.
        modified-ref
            The ref to compare against, ``master`` branch is used
            by default.

        .. _fmf identifier: https://fmf.readthedocs.io/en/latest/concept.html#identifiers
        .. _Flexible Metadata Format: https://fmf.readthedocs.io/
    example: |
        discover:
            how: fmf

        discover:
            how: fmf
            url: https://github.com/psss/tmt
            ref: master
            path: /metadata/tree/path
            test: [regexp]
            filter: tier:1
    link:
      - implemented-by: /tmt/steps/discover/fmf.py
