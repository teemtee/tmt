summary: Discover tests relevant for execution

description: |
    Gather information about tests which are supposed to be run.
    Provide method ``tests()`` returning a list of discovered
    tests and ``requires()`` returning a list of all required
    packages aggregated from the `require`_ attribute of the
    individual test metadata.

    .. _require: https://tmt.readthedocs.io/en/latest/spec/tests.html#require

    Store the list of aggregated tests with their corresponding
    metadata in the ``tests.yaml`` file. The format must be a
    dictionary of dictionaries structured in the following way::

        /test/one:
            summary: Short test summary.
            description: Long test description.
            contact: Petr Šplíchal <psplicha@redhat.com>
            component: [tmt]
            test: tmt --help
            path: /test/path/
            require: [package1, package2]
            environment:
                key1: value1
                key2: value2
                key3: value3
            duration: 5m
            enabled: true
            result: respect
            tag: [tag]
            tier: 1

        /test/two:
            summary: Short test summary.
            description: Long test description.
            ...

/shell:
    summary: Provide a manual list of shell test cases
    description:
        List of test cases to be executed can be defined manually
        directly in the plan as a list of dictionaries containing
        test ``name`` and actual ``test`` script. Optionally it is
        possible to define any other :ref:`/spec/tests` attributes
        such as ``path`` or ``duration`` here as well. The default
        :ref:`/spec/tests/duration` for tests defined directly in
        the discover step is ``1h``.
    example: |
        discover:
            how: shell
            tests:
            - name: /help/main
              test: tmt --help
            - name: /help/test
              test: tmt test --help
            - name: /help/smoke
              test: ./smoke.sh
              path: /tests/shell
              duration: 1m
    link:
      - implemented-by: /tmt/steps/discover/shell.py

/fmf:
    summary: Discover available tests using the fmf format
    description: |
        Use the `Flexible Metadata Format`_ to explore all
        available tests in given repository. The following
        parameters are supported:

        url
            Git repository containing the metadata tree.
            Current git repository used by default.
        ref
            Branch, tag or commit specifying the desired git
            revision. Defaults to the remote repository's default
            branch if url given or to the current ``HEAD`` if url
            not provided.
        path
            Path to the metadata tree root. Must be relative to
            the git repository root if url provided, absolute
            local filesystem path otherwise. By default ``.`` is
            used.

        See also the `fmf identifier`_ documentation for details.
        Use the following keys to limit the test discovery by test
        name, an advanced filter or link:

        test
            List of test names or regular expressions used to
            select tests by name. Duplicate test names are allowed
            to enable repetitive test execution, preserving the
            listed test order.
        link
            Select tests using the :ref:`/spec/core/link` keys.
            Values must be in the form of ``RELATION:TARGET``,
            tests containing at least one of them are selected.
            Regular expressions are supported for both relation
            and target. Relation part can be omitted to match all
            relations.
        filter
            Apply advanced filter based on test metadata
            attributes. See ``pydoc fmf.filter`` for more info.
        exclude
            Exclude tests which match a regular expression.

        It is also possible to limit tests only to those that have
        changed in git since a given revision. This can be
        particularly useful when testing changes to tests
        themselves (e.g. in a pull request CI). Related config
        options (all optional) are:

        modified-only
            Set to True if you want to filter modified tests only.
            The test is modified if its name starts with the name
            of any directory modified since modified-ref.
        modified-url
            An additional remote repository to be used as the
            reference for comparison. Will be fetched as a
            ``reference`` remote in the test dir.
        modified-ref
            The ref to compare against. Defaults to the local
            repository's default branch. Note that you need to
            specify ``reference/<branch>`` to compare to a branch
            from the repository specified in ``modified-url``.

        There is a support for discovering tests from extracted
        (rpm) sources. Needs to run on top of the supported
        DistGit (Fedora, CentOS), ``url`` can be used to point to
        such repository, ``path`` denotes path to the metadata
        tree root within extracted sources. At this moment no
        patches are applied, only tarball extraction happens.

        dist-git-source
            Set to ``true`` to enable extracting sources.
        dist-git-type
            The DistGit auto detection is based on git remotes.
            Use this option to specify it directly. At least
            ``Fedora`` and ``CentOS`` are supported as values,
            help will print all possible values.

        .. _fmf identifier: https://fmf.readthedocs.io/en/latest/concept.html#identifiers
        .. _Flexible Metadata Format: https://fmf.readthedocs.io/
    example: |
        # Discover all fmf tests in the current repository
        discover:
            how: fmf

        # Fetch tests from a remote repo, filter by name/tier
        discover:
            how: fmf
            url: https://github.com/teemtee/tmt
            ref: main
            path: /metadata/tree/path
            test: [regexp]
            filter: tier:1

        # Choose tests verifying given issue
        discover:
            how: fmf
            link: verifies:issues/123$

        # Select only tests which have been modified
        discover:
            how: fmf
            modified-only: true
            modified-url: https://github.com/teemtee/tmt-official
            modified-ref: reference/main

        # Extract tests from the distgit sources
        discover:
            how: fmf
            dist-git-source: true
    link:
      - implemented-by: /tmt/steps/discover/fmf.py
