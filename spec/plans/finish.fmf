summary: Finishing tasks

description:
    Additional actions to be performed after the test execution
    has been completed.  Counterpart of the ``prepare`` step
    useful for various cleanup actions. Use the
    :ref:`/spec/core/order` attribute to select in which order
    finishing tasks should happen if there are multiple configs.
    Default order is ``50``.

example: |
    finish:
        how: shell
        script: upload-logs.sh

/shell:
    summary:
        Perform finishing tasks using shell (bash) scripts.
    example: |
        finish:
            how: shell
            script:
            - upload-logs.sh || true
            - rm -rf /tmp/temporary-files
    link:
      - implemented-by: /tmt/steps/finish/shell.py

/ansible:
    summary:
        Perform finishing tasks using ansible
    example: |
        finish:
            how: ansible
            playbook:
                - playbooks/common.yml
                - playbooks/os/rhel7.yml
                - https://foo.bar/rhel7-final-touches.yml
    link:
      - implemented-by: /tmt/steps/finish/ansible.py

/where:
    summary: Perform finishing tasks on selected guests
    description: |
        In the :ref:`/spec/plans/provision/multihost` scenarios it
        is often necessary to perform different completion tasks
        on individual guests. The ``where`` key allows to select
        guests where the finishing tasks should be applied by
        providing their ``name`` or the ``role`` they play in the
        scenario. Use a list to specify multiple names or roles.
        By default, when the ``where`` key is not defined,
        finishing tasks are performed on all provisioned guests.
    example: |
        # Stop Apache on the server
        prepare:
          - how: shell
            script: systemctl stop httpd
            where: server
    link:
      - implemented-by: /tmt/steps
      - documented-by: /docs/guide.rst

/when:
    summary: Conditional step configuration
    description: |
        Using the ``when`` key makes it easier to restrict a step configuration
        to run only if any of the specified rules matches.
        The syntax is the same as in ``adjust`` and :ref:`/spec/context`.

        Values can be single string with the rule or list of rules.
    example: |
        finish:
          - name: finish config to run only on Fedora
            when: distro == fedora
            how: shell
            script: ./fedora_specific.
          - name: Runs always
            how: shell
            script: ./setup.sh
          - name: Just a demo of more rules in the 'when' key
            how: shell
            script: ./something.sh
            when:
            - initiator == konflux && distro == fedora
            - initiator == human && distro == fedora
    link:
      - implemented-by: /tmt/steps
      - verified-by: /tests/steps/when
      - documented-by: /docs/guide.rst
