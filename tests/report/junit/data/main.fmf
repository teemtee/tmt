/plan:
    discover:
        how: fmf
    provision:
        how: container
    execute:
        how: tmt

/test:
    path: /
    /beakerlib:
        framework: beakerlib
        /pass:
            test: ./runtest.sh pass
        /fail:
            test: ./runtest.sh fail
        /timeout:
            test: ./runtest.sh timeout
            duration: 2s
        /subresults:
            test: ./beaker-phases-subresults.sh

    /shell:
        framework: shell
        /pass:
            test: "true"
        /fail:
            test: "false"
        /timeout:
            test: sleep 10
            duration: 2s
        /escape"<speci&l>_chars:
            test: ./special_chars.sh

        /subresults/pass:
            summary: Basic pass test of shell subresults
            test: |
                tmt-report-result /pass-subtest/good0 PASS
                tmt-report-result /pass-subtest/good1 PASS
                tmt-report-result /pass-subtest/good2 PASS

        /subresults/skip:
            summary: Test with skip and pass test outcomes should pass
            test: |
                tmt-report-result /skip-subtest/extra-skip SKIP
                tmt-report-result /skip-subtest/extra-pass PASS

        /subresults/fail:
            summary: This reduced outcome of shell subresults must be fail
            test: |
                tmt-report-result /fail-subtest/good PASS
                tmt-report-result /fail-subtest/fail FAIL
                tmt-report-result /fail-subtest/weird WARN
                tmt-report-result /fail-subtest/skip SKIP

        /subresults/sleep:
            summary: Add some sleep to test the duration
            test: |
                sleep 2; tmt-report-result /sleep-subtest/good PASS
                sleep 3; tmt-report-result /sleep-subtest/bad FAIL
