story: 'As a user I want to comfortably work with tests'

/ls:
    story: 'List available tests'
    example: tmt test ls
    implemented: /tmt/cli
    tested: /tests/ls

/show:
    story: 'Show test metadata'
    example: tmt test show
    implemented: /tmt/cli

/lint:
    story: 'Check test against the L1 metadata specification'
    description:
        Verify that test metadata are aligned with the
        specification, e.g. that all required attributes are
        present and that all attributes have correct type.
    example: tmt test lint
    implemented: /tmt/cli

/create:
    story: 'Create a new test skeleton'
    description:
        Provide an easy way how to create a new test. Ideally
        with support for multiple test skeletons. Similarly as
        beaker-wizard (which should be obsoleted by this) the
        tool should prompt for required values if not provided
        on the command line.
    example:
        - tmt test create
        - tmt test create /tests/area/feature
        - tmt test create /tests/area/feature --skeleton beakerlib
        - tmt test create /tests/area/feature --duration=1h
    implemented: /tmt/cli

/convert:
    story: 'Convert old test metadata'
    example: tmt test convert
    implemented: /tmt/convert
    tested: /tests/test_convert
    documented: /docs/commands#test

/export:
    story: 'I want to export test metadata into desired format.'
    example: tmt test export --format yaml
    implemented: /tmt/base

/coverage:
    story: 'Test coverage overview'
    description:
        Show current status of test coverage.
        Alias for /stories/cli/story/coverage/test
    example: tmt test coverage

/filter:
    story: 'Filter available tests'
    example:
        - tmt test ls REGEXP
        - tmt test ls --max-duration=5m
        - tmt test ls --enabled
        - tmt test ls --tier=1
