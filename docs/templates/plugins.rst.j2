:tocdepth: 0

.. _/plugins/{{ STEP }}:

{{ STEP | capitalize }} Plugins
{{ '=' * (8 + (STEP | length)) }}

{% for PLUGIN_ID in REGISTRY.iter_plugin_ids() %}
    {% set method = REGISTRY.get_plugin(PLUGIN_ID) %}
    {% set PLUGIN = method.class_ %}

.. _plugins/{{ STEP }}/{{ PLUGIN_ID | strip }}:

{{ PLUGIN_ID }}
{{ '^' * (PLUGIN_ID | length)}}

{#
    TODO: once we start getting reviewed and polished plugins, drop the warning
    for those that would be done and ready. Probably with some temporary list
    to which we would add their names.
#}
.. warning::

    Please, be aware that the documentation below is a work in progress. We are
    working on fixing it, adding missing bits and generally making it better.
    Also, it was originaly used for command line help only, therefore the
    formatting is often suboptional.

{% if PLUGIN.__doc__ %}
{{ PLUGIN.__doc__ | dedent | strip }}
{% endif %}

**Configuration**

{% for field in container_fields(PLUGIN._data_class) %}
    {% if (
        field.name not in ('how', 'name', 'where', '_OPTIONLESS_FIELDS')
        and field.internal != true
        and (
            not PLUGIN._data_class._OPTIONLESS_FIELDS
            or field.name not in PLUGIN._data_class._OPTIONLESS_FIELDS
        )
     ) %}
        {% set _, option, _, metadata = container_field(PLUGIN._data_class, field.name) %}

        {% if metadata.metavar %}
{{ option }}: ``{{ metadata.metavar }}``
        {% elif metadata.default is boolean %}
{{ option }}: ``true|false``
        {% else %}
{{ option }}:
        {% endif %}
        {% if metadata.help %}
{{ metadata.help | strip | indent(4, first=true) }}
        {% endif %}
    {% endif %}
{% endfor %}

{% if not loop.last %}
----
{% endif %}
{% endfor %}
