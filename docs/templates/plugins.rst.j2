:tocdepth: 0

{% macro render_field(plugin_id, plugin_data_class, field_name) %}
    {% set _, option, _, metadata = container_field(plugin_data_class, field_name) %}

    {% if metadata.metavar %}
{{ option }}: ``{{ metadata.metavar }}``
    {% elif metadata.default is boolean %}
{{ option }}: ``true|false``
    {% else %}
{{ option }}:
    {% endif %}
    {% if metadata.help %}
{{ metadata.help | trim | indent(4, first=true) }}
    {% endif %}
    {% if metadata.has_default %}
        {% set actual_default = metadata.materialized_default %}

        {% if actual_default is boolean %}
    Default: ``{{ actual_default | string | lower }}``
        {% elif actual_default is string %}
    Default: ``{{ actual_default }}``
        {% elif actual_default is integer %}
    Default: ``{{ actual_default }}``
        {% elif actual_default is none %}
    Default: *not set*
        {% elif actual_default is sequence %}
            {% if not actual_default %}
    Default: *not set*
            {% else %}
    Default: {% for default_item in actual_default %}``{{ default_item.pattern | default(default_item) }}``{% if not loop.last %}, {% endif %}{% endfor %}
            {% endif %}
        {% else %}
            {% set _ = LOGGER.warn("%s/%s.%s: could not render default value, '%s'" | format(STEP, plugin_id, field_name, actual_default)) %}
    Default: *could not render default value correctly*
        {% endif %}
    {% endif %}
{% endmacro %}

.. _/plugins/{{ STEP }}:

{{ STEP | replace('-', ' ') | capitalize }} Plugins
{{ '~' * (8 + (STEP | length)) }}

.. include:: {{ STEP }}-header.inc.rst

{% for PLUGIN_ID, PLUGIN, PLUGIN_DATA_CLASS in PLUGINS() %}
    {% if loop.first %}
.. _/plugins/{{ STEP }}/common-keys:

Common Keys
-----------

The following keys are accepted by all plugins of the ``{{ STEP }}`` step.

        {% for field_name in container_inherited_fields(PLUGIN_DATA_CLASS) | sort %}
{{ render_field(PLUGIN_ID, PLUGIN_DATA_CLASS, field_name) }}
        {% endfor %}
    {% endif %}

.. _/plugins/{{ STEP }}/{{ PLUGIN_ID | trim }}:

{{ PLUGIN_ID }}
{{ '-' * (PLUGIN_ID | length) }}

{# Emit the warning only for plugins that have not been reviewed yet. #}
{% set plugin_full_id = STEP + "/" + PLUGIN_ID %}
{% if plugin_full_id not in REVIEWED_PLUGINS %}
.. warning::

    Please, be aware that the documentation below is a work in progress. We are
    working on fixing it, adding missing bits and generally making it better.
    Also, it was originally used for command line help only, therefore the
    formatting is often suboptional.
{% endif %}

{% if PLUGIN.__doc__ %}
{{ PLUGIN.__doc__ | dedent | trim }}
{% endif %}

{% set intrinsic_fields = container_intrinsic_fields(PLUGIN_DATA_CLASS) | sort %}

{% if intrinsic_fields %}
Configuration
^^^^^^^^^^^^^

See also :ref:`Common Keys{# djlint:off H025 #}</plugins/{{ STEP }}/common-keys>{# djlint:on H025 #}` accepted by the plugin.

{% for field_name in intrinsic_fields %}
{{ render_field(PLUGIN_ID, PLUGIN_DATA_CLASS, field_name) }}
{% endfor %}

{% if not loop.last %}
----
{% endif %}
{% endif %}
{% endfor %}
